#*---------------------*#
#*   dunst's dunstrc   *#
#*---------------------*#
# vim: ft=cfg

[global]

### GENERAL ###
force_xwayland = false
ignore_dbusclose = false
fullscreen = delay

### DISPLAY ###
monitor = 0
follow = none
layer = top

### GEOMETRY ###
width = 300 # fixed value
height = (0, 250) # min and max value
origin = top-right
offset = (5, 33)
frame_width = 5
corners = all
corner_radius = 10

### MULTIPLE NOTIFICATIONS ###
stack_duplicates = true
hide_duplicate_count = false
notification_limit = 6
indicate_hidden = yes
sort = yes
gap_size = 5

### PROGRESS BAR ###
progress_bar = true
progress_bar_height = 16
progress_bar_frame_width = 3
progress_bar_min_width = 200
progress_bar_max_width = 300
progress_bar_corner_radius = 1

### PADDING ###
padding = 10
horizontal_padding = 12
text_icon_padding = 0

### TEXT ###
font = RobotoMono Nerd Font Propo 12
line_height = 0
markup = full
# The format of the message.  Possible variables are:
#   %a  appname
#   %s  summary
#   %b  body
#   %i  iconname (including its path)
#   %I  iconname (without its path)
#   %p  progress value if set ([  0%] to [100%]) or nothing
#   %n  progress value if set without any extra characters
#   %%  Literal %
# Markup is allowed
format = "<b>%s</b>\n%b"
alignment = left #**
vertical_alignment = center
ignore_newline = no
# Display indicators for URLs (U) and actions (A)
show_indicators = yes
show_age_threshold = 120
ellipsize = middle #**

### ICONS ###
icon_position = off

### HISTORY ###
sticky_history = yes
history_length = 10

### MISC ###
# dmenu path.
dmenu = /usr/bin/dmenu -p dunst:
# Browser for opening urls in context menu.
browser = /usr/bin/xdg-open
# Always run rule-defined scripts, even if the notification is suppressed
always_run_script = true

### MOUSE ###
# Possible action values (can be strung together) are:
# - none 
# - close_current
# - close_all
# - do_action: Invoke the action determined by the action_name rule. If there is no such action, open the context menu.
# - open_url: If the notification has exactly one url, open it. If there are multiple ones, open the context menu.
# - context: Open context menu for the notification.
# - context_all: Open context menu for all notifications.
mouse_left_click = do_action, close_current
mouse_middle_click = none
mouse_right_click = close_all


[urgency_low]
frame_color = "#777777"
background = "#333333"
foreground = "#dddddd"
highlight = "#dddddd"
timeout = 5


[urgency_normal]
frame_color = "#75568f"
background = "#4e3960"
foreground = "#e4c7fc"
highlight = "#e4c7fc"
timeout = 10


[urgency_critical]
frame_color = "#aa0000"
background = "#700000"
foreground = "#fcc4c4"
highlight = "#fcc4c4"
timeout = 0
fullscreen = show


[hint_notifications]
# Filter rule
summary = "hintNotification"
# Modifications
timeout = 3
fullscreen = show
format = "<b>%b</b>"
alignment = center
history_ignore = true


# Every section that isn't one of the above is interpreted as a rules to
# override settings for certain messages.
#
# Messages can be matched by
#    appname (discouraged, see desktop_entry)
#    body
#    category
#    desktop_entry
#    icon
#    match_transient
#    msg_urgency
#    stack_tag
#    summary
#
# and you can override the
#    background
#    foreground
#    format
#    frame_color
#    fullscreen
#    new_icon
#    set_stack_tag
#    set_transient
#    set_category
#    timeout
#    urgency
#    icon_position
#    skip_display
#    history_ignore
#    action_name
#    word_wrap
#    ellipsize
#    alignment
#    hide_text
#
# Shell-like globbing will get expanded.
#
# Instead of the appname filter, it's recommended to use the desktop_entry filter.
# GLib based applications export their desktop-entry name. In comparison to the appname,
# the desktop-entry won't get localized.
#
# SCRIPTING
# You can specify a script that gets run when the rule matches by
# setting the "script" option.
# The script will be called as follows:
#   script appname summary body icon urgency
# where urgency can be "LOW", "NORMAL" or "CRITICAL".
#
# NOTE: It might be helpful to run dunst -print in a terminal in order
# to find fitting options for rules.

# fullscreen values
# show: show the notifications, regardless if there is a fullscreen window opened
# delay: displays the new notification, if there is no fullscreen window active
#        If the notification is already drawn, it won't get undrawn.
# pushback: same as delay, but when switching into fullscreen, the notification will get
#           withdrawn from screen again and will get delayed like a new notification
#[fullscreen_delay_everything]
#    fullscreen = delay
#[fullscreen_show_critical]
#    msg_urgency = critical
#    fullscreen = show

#[ignore]
#    # This notification will not be displayed
#    summary = "foobar"
#    skip_display = true

#[history-ignore]
#    # This notification will not be saved in history
#    summary = "foobar"
#    history_ignore = yes

#[skip-display]
#    # This notification will not be displayed, but will be included in the history
#    summary = "foobar"
#    skip_display = yes
