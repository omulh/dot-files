#*----------------------*#
#*       lf's lfrc      *#
#*----------------------*#
# vim: ft=conf

### GENERAL SETTINGS ###

# Interpreter for shell commands
set shell sh

# Set '-eu' options for shell commands
# Option '-e' is used to exit on error
# Option '-u' is used to give error for unset variables
set shellopts '-eu'

# Set internal field separator (IFS) to "\n" for shell commands
# This is useful to automatically split file names in $fs and $fx
set ifs "\n"

# Allow the use of the mouse
set mouse true

# Set the looks of the TUI
set icons true
set drawbox true
set roundbox true
set borderfmt "\033[30m"
set errorfmt "\033[7;31m"
set timefmt '_2 Jan 2006 15:04:05'
set tabstop 4

# Set a new previewer
set previewer "pistol"

# Leave some space at the top and bottom when scrolling
set scrolloff 4

# When executing commands that use $fx (selected files),
# use selected files from the current directory only
set selmode 'dir'

# Allow incremental search and filtering
set incsearch true
set incfilter true

# Use smartcase when searching
set ignorecase true
set smartcase true


### COMMANDS SETTINGS ###

# REMOVE DEFAULT COMMANDS
cmd open

# DEFINE NEW COMMANDS
# Reload the lf configuration file
cmd configReload $lf -remote "send $id source ~/.config/lf/lfrc"

# Set terminal window title incl. nested session info
cmd setWindowTitle &{{
    bash -c '
    [[ $LF_LEVEL != 1 ]] && nestLevel=" nested*" || nestLevel=""
    printf "\033]0;$(dirs) [lf$nestLevel]\007" > /dev/tty
    '
}}

# Set lf's promt incl. git info
cmd setPrompt &{{
    bash -c '
    fmt="\033[2;37m["       # dim white opening bracket
    fmt+="\033[0;36m%u " # cyan current user
    fmt+="\033[2;35m%d"  # dim magenta curr. dir
    fmt+="\033[0;35m%f"  # magenta highlighted file
    fmt+="\033[2;37m] "  # dim white closing bracket
    gitPromptFile=/usr/share/git/git-prompt.sh
    if [[ -r $gitPromptFile ]]; then
        source $gitPromptFile
        fmt+="\033[2;37m$(__git_ps1 "[")"    # opening bracket
        fmt+="\033[0;32m$(__git_ps1 "îœ¥ %s")" # green git branch
        fmt+="\033[2;37m$(__git_ps1 "]")"   # closing bracket
    fi
    fmt+="\033[0m"        # reset color and format
    lf -remote "send $id set promptfmt \"$fmt\""
    '
}}

# Set a new default application for a file's mime type
cmd newOpener &{{
    set +e
    mimeType=$(xdg-mime query filetype $f)
    fileName=$1.desktop
    xdg-mime default $fileName $mimeType
    if [[ $? -eq 0 ]]; then
        lf -remote "send $id %echo -e \"\033[1;7;32m$fileName\033[0;7;32m is the new default for \033[1m$mimeType\033[0;7;32m files\033[0m\""
    else
        lf -remote "send $id %echo -e \"\033[7;31mOperation failed\033[0m\""
    fi
}}

# Fuzzy find and select a file in the current dir.
cmd findHere ${{
    set +e
    file=$(fzf --no-multi --height=100% --margin=10%,20% --border-label=" Search in $PWD ")
    if [[ $? -eq 0 || $? -eq 130 ]]; then
        if [[ -n $file ]]; then
            if [[ $file == */* ]]; then
                fileDir=${file%/*}
                lf -remote "send $id cd \"$fileDir\""
            fi
            fileName=${file##*/}
            lf -remote "send $id select \"$fileName\""
        fi
    elif [[ $? -eq 1 ]]; then
        lf -remote "send $id %echo -e \"\033[7;33mNo match found\033[0m\""
    else
        lf -remote "send $id %echo -e \"\033[7;31mOperation failed\033[0m\""
    fi
    lf -remote "send $id setWindowTitle"
}}

# Go to the location pointed by a symlink
cmd followLink %{{
    lf -remote "send $id select '$(readlink $f)'"
}}

# Extract the contents of an archive file in a new dir.
cmd extractInNewDir &{{
    set -f
    case $f in
        *.7z|*.zip|*.gz|*.bz|*.bz2|*.rar)
            dirPath=${f%.*}
            mkdir -p $dirPath
            dir=${dirPath##*/}
            7z x -o$dir $f
            ;;
        *)
            lf -remote "send $id %echo -e \"\033[7;31mWrong or unsupported format\033[0m\""
            ;;
    esac
}}

# Extract the contents of an archive file on the current dir.
cmd extractAsIs &{{
    set -f
    case $f in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2)
            tar xjvf $f
            ;;
        *.tar.gz|*.tgz)
            tar xzvf $f
            ;;
        *.tar.xz|*.txz)
            tar xJvf $f
            ;;
        *.7z|*.zip|*.gz|*.bz|*.bz2|*.rar)
            7z x $f
            ;;
        *)
            lf -remote "send $id %echo -e \"\033[7;31mWrong or unsupported format\033[0m\""
            ;;
    esac
}}

# Create nested dirs. and select the created (parent) dir.
cmd mkdir %{{
    mkdir -p "$1"
    if [[ $? -eq 0 ]]; then
        parentDir=${1%%/*}
        lf -remote "send $id select \"$parentDir\""
    fi
}}

# Compress files with 7z
cmd mkzip &{{
    set -f
    mkdir $1
    cp -r $fx $1
    7z a $1.zip $1
    rm -rf $1
}}

# DEFINE LF SPECIAL COMMANDS
# Change the panes' ratios and enable or disable the
# preview pane based on the current ui's width
cmd on-redraw &{{
    if [ $lf_width -le 80 ]; then
        lf -remote "send $id set ratios 2:3"
        lf -remote "send $id set preview false"
    else
        lf -remote "send $id set ratios 1:2:3"
        lf -remote "send $id set preview true"
    fi
}}

# Change the cursor format when lf loses focus
cmd on-focus-lost :{{
    set cursorparentfmt ""
    set cursoractivefmt ""
    set cursorpreviewfmt ""
}}

# Change the cursor format when lf gains focus
cmd on-focus-gained :{{
    set cursoractivefmt "\033[7m"
    set cursorpreviewfmt "\033[2;7m"
    set cursorparentfmt "\033[2;7m"
}}

# Update the prompt and window title on dir. change
cmd on-cd :{{
    setWindowTitle
    setPrompt
}}

# Update cursor format, prompt and window title on init
cmd on-init :{{
    on-focus-gained
    setWindowTitle
    setPrompt
}}


### MAPPINGS SETTINGS ###

# Remove all mappings (normal and visual modes)
clearmaps

# NEW NORMAL/VISUAL MODE MAPPINGS
# Basic commands
map 'q' quit
map '<f-1>' doc
map ':' read

# Shell commands
map '$' shell
map '<enter>' shell
map '!' shell-wait
map '%' shell-pipe
map '&' shell-async

# Change sorting, displayed info and file visibility
map 'sa' :set sortby atime; set info atime
map 'sc' :set sortby ctime; set info ctime
map 'se' :set sortby ext; set info
map 'sn' :set sortby natural; set info
map 'ss' :set sortby size; set info size
map 'st' :set sortby time; set info time
map 'zr' set reverse!
map 'za' set info size:time
map 'zn' set info
map 'zs' set info size
map 'zt' set info time
map 'zh' set hidden!

# Same-dir. navigation
map 'n' down
map '<down>' down
map 'e' up
map '<up>' up
map '<c-y>' scroll-up
map '<c-u>' half-up
map '<c-b>' page-up
map '<pgup>' page-up
map '<home>' top
map 'gg' top
map '<c-e>' scroll-down
map '<c-d>' half-down
map '<c-f>' page-down
map '<pgdn>' page-down
map '<end>' bottom
map 'G' bottom

# NEW NORMAL MODE MAPPINGS
# Intra-dir. navigation
nmap 'm' updir
nmap '<left>' updir
nmap 'i' open
nmap '<right>' open
nmap 'gh' cd ~
nmap 'gm' cd '/run/media'
nmap 'gr' cd /
nmap 'gl' followLink
nmap 'k' mark-save
nmap 'K' mark-remove
nmap "'" mark-load
nmap '<c-f>' findHere

# File and dir. commands
nmap 'd' cut
nmap 'p' paste
nmap 'y' copy
nmap 'c' clear
nmap 'D' delete
nmap 'R' rename
nmap 'o' &lf-xdg-mime-helper $f $id -o
nmap 'r' $vimless $f; lf -remote "send $id setWindowTitle"
nmap 'h' $$EDITOR $fx; lf -remote "send $id setWindowTitle"
nmap 'H' $sudoedit $f; lf -remote "send $id setWindowTitle"
nmap 'w' &lf-xdg-mime-helper $f $id
nmap 'W' :push :newOpener<space>
nmap 'ad' :push :mkdir<space>
nmap 'az' :push :mkzip<space>
nmap 'xa' extractAsIs
nmap 'xd' extractInNewDir

# Selection operations
nmap '<space>' :toggle; down
nmap 'u' unselect
nmap 'v' invert
nmap 'V' visual

# NEW VISUAL MODE MAPPINGS
vmap '<space>' visual-accept
vmap 'o' visual-change
vmap 'u' visual-unselect
vmap 'V' visual-discard
vmap '<esc>' visual-discard
