#! /bin/sh

readonly progName='mime-query'

readonly helpHint="
Try '$progName --help' for more information"

readonly usageHint="
Usage:
  $progName [-q|-v] FILE|URI"

readonly helpText="\
Usage: $progName [OPTION]... FILE|URI
Get the mime type of the given FILE or URI

Input:
  A single input argument is accepted and it must be either a file,
  a URI, or a '-' character to allow reading from stdin.
  If the input has a valid URI scheme syntax followed by a colon,
  it is assumed to be a URI, otherwise it is considered as a file.

Output:
  The mime type of the input argument in the form of 'type/subtype'.

Options:
  -q, --quiet       suppress error messages from the stderr stream
  -v, --verbose     show verbose messages on the stderr stream
  -h, --help        show this help message and exit"

DEBUG() {
    [[ $VERBOSE == true ]] && echo "$1" >&2
}

ERROR() {
    [[ $QUIET == false ]] && echo "$1" >&2
}

QUIET=false
VERBOSE=false

GIVEN_ARGS=$(getopt -n "$progName" -o 'qvh' -l 'quiet,verbose,help' -- "$@")
if [ $? != 0 ]; then
    ERROR "$usageHint"
    exit 1
fi
eval set -- "$GIVEN_ARGS"

# Parse the command line arguments
while true; do
    case "$1" in
        -q | --quiet )
            QUIET=true; shift ;;
        -v | --verbose )
            VERBOSE=true; shift ;;
        -h | --help )
            echo "$helpText"; exit 0 ;;
        -- )
            shift; break ;;
        * )
            break ;;
    esac
done

# Process the positional arguments
if [ $# -eq 0 ]; then
    ERROR "$progName: no input argument specified"
    ERROR "$usageHint"
    exit 2
elif [[ -n $2 ]]; then
    ERROR "$progName: unexpected argument -- '$2'"
    ERROR "$usageHint"
    exit 2
elif [[ $1 == - ]]; then
    if [ -t 0 ]; then
        ERROR "$progName: argument '-' specified without input on stdin"
        ERROR "$helpHint"
        exit 2
    else
        DEBUG "Reading input from stdin"
        read INPUT
    fi
else
    INPUT="$1"
fi

# Process the input
if [[ $INPUT =~ ^[[:alpha:]][[:alnum:]+\.-]*: ]]; then
    DEBUG "Input '$INPUT' has URI syntax, assuming URI"

    scheme="$(echo "$INPUT" | cut -d : -f 1)"
    mimeType="x-scheme-handler/$scheme"
else
    DEBUG "Input '$INPUT' doesn't have URI syntax, assuming file"

    if [[ ! -e $INPUT ]]; then
        ERROR "$progName: input file '$INPUT' does not exist"
        exit 3
    elif [[ ! -r $INPUT ]]; then
        ERROR "$progName: no read access to input file '$INPUT'"
        exit 3
    fi
    mimeType=$(file --brief --dereference --mime-type "$INPUT" 2> /dev/null)
fi

if [[ -z $mimeType ]]; then
    ERROR "$progName: no mime type found"
    exit 4
fi

DEBUG "Detected mime type:"
echo "$mimeType"
exit 0
