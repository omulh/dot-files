#! /bin/sh

# Get the name for the default sink from pactl
sinkName=$(pactl get-default-sink)

# Get the available info for the sink from pactl
sinkPactlInfo=$(pactl -f json list sinks | \
    jq --arg sinkName $sinkName '.[] | select(.name == $sinkName)')

# Extract the volume percent for every channel of the sink
sinkChannelsVolume=$(echo "$sinkPactlInfo" | \
    jq -r '.volume.[].value_percent' | \
    sed 's/%//')

# Get the highest volume value for the sink
maxSinkVolume=0
while IFS= read volume; do
    if [[ $volume -gt $maxSinkVolume ]]; then
        maxSinkVolume=$volume
    fi
done <<< "$sinkChannelsVolume"

# Toggle the mute status or increase/decrease
# the volume for the sink if indicated
if [[ $1 == --increase || $1 == -i ]]; then
    if [[ $maxSinkVolume -le 98 ]]; then
        pactl set-sink-volume "$sinkName" +2%
    fi
elif [[ $1 == --decrease || $1 == -d ]]; then
    pactl set-sink-volume "$sinkName" -2%
elif [[ $1 == --toggle-mute || $1 == -m ]]; then
    pactl set-sink-mute "$sinkName" toggle
fi

# Get the new info for the sink from pactl
sinkPactlInfo=$(pactl -f json list sinks | \
    jq --arg sinkName $sinkName '.[] | select(.name == $sinkName)')

# Get the new volume value for the sink
sinkChannelsVolume=$(echo "$sinkPactlInfo" | \
    jq -r '.volume.[].value_percent' | \
    sed 's/%//')
# If the different channels don't have the same volume,
# create a string with all the different values;
# at the same time extract the highest volume value;
lastVolume=$(echo "$sinkChannelsVolume" | sed -n '1p')
allSinkVolumes=$lastVolume
maxSinkVolume=0
while IFS= read volume; do
    [[ $volume -ne $lastVolume ]] && allSinkVolumes+="%, $volume"
    [[ $volume -gt $maxSinkVolume ]] && maxSinkVolume=$volume
done <<< "$sinkChannelsVolume"
allSinkVolumes+='%'

# Get the mute status for the sink
sinkMuted=$(echo "$sinkPactlInfo" | jq '.mute')

# Extract the 'node.nick' property for the sink if it exists,
# or use 'device.description' otherwise
sinkShortName=$(echo "$sinkPactlInfo" | jq -r '.properties."node.nick"')
if [[ $sinkShortName == null ]]; then
    sinkShortName=$(echo "$sinkPactlInfo" | jq -r '.properties."device.description"')
fi

# Create the notification string
notificationStr="Vol: $allSinkVolumes"
[[ $sinkMuted == true ]] && notificationStr+=" [Muted]"
notificationStr+="\n($sinkShortName)"

# Send a notification
notify-send -u normal -h string:x-dunst-stack-tag:"hintNotification" \
    -h int:value:$maxSinkVolume "hintNotification" "$notificationStr"
