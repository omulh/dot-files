#!/bin/sh

# Get info on the available audio sinks from pactl
pactlAvailableSinks=$(pactl list sinks | grep -E -B 45 ', available|availability unknown')

# Get the ID for the available sinks,
# which should be found in a line like this:
# object.id = "64"
availableSinkIds=$(echo "$pactlAvailableSinks" | grep 'object.id' | sed -r 's/[^0-9]*//g')

# Get the node nick for the available sinks,
# which should be found in a line like this:
# node.nick = "Integrated Speakers"
availableSinkNicks=$(echo "$pactlAvailableSinks" | grep 'node.nick' | cut -d\" -f2)

# Get the node nick for the default sink from wpctl inspect,
# and add a hint to it in the list of available sinks
defaultSinkNick=$(wpctl inspect @DEFAULT_AUDIO_SINK@ | grep node.nick | cut -d\" -f2)
availableSinkNicks=$(echo "$availableSinkNicks" | sed "s/$defaultSinkNick/& (Active)/")

# Get the length of the longest string
maxLen="0"
while IFS= read -r line; do
    [[ "${#line}" -gt "$maxLen" ]] && maxLen="${#line}"
done <<< "$availableSinkNicks"
width=$((maxLen+=2))

# Create a fuzzel menu with the sink nicks
fuzzelIdx=$(echo "$availableSinkNicks" | fuzzel --dmenu --index -p "Select an output: " -l 4 -w $width -x 15 -y 15 -P 8)

# If a selection was made, use wpctl to change
# to the corresponding sink, by using its ID
if [[ -n $fuzzelIdx ]]; then
    selectedSinkId=$(echo $availableSinkIds | cut -d' ' -f$((fuzzelIdx + 1)))
    wpctl set-default $selectedSinkId
fi
