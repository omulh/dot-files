#! /bin/sh

chosenFile=$(
    find -L $HOME -mindepth 1 -not -path '*/.*' -printf "%P\n" | sort | \
    fzf --height 100% --prompt '~/' --border bottom --input-border \
        --input-label ' Open a file ' --margin 0,1 --no-multi \
        --preview-border line --preview "fzf-xdg-mime-helper $HOME/{}" \
        --preview-window nohidden,down,1 --preview-label ' Opens with ' --preview-label-pos 2 \
        --color 'border:0' \
        --color 'pointer:12:dim' \
        --color 'input-label:7:dim,preview-label:15:dim' \
        --color 'prompt:7:dim' \
        --color 'query:7' \
        --color 'info:10:dim' \
        --color 'hl:6:dim,current-hl:12' \
        --color 'current-fg:15:regular' \
        --color 'list-fg:7:dim' \
        --color 'preview-fg:4' \
)

# Open the file with the default app if a selection was made
if [[ -n "$chosenFile" ]]; then
    # Get the mime type of the given file from xdg-mime
    mimeType=$(xdg-mime query filetype "$chosenFile")

    # Get info on the default app for the obtained mime type
    # from xdg-mime, reversing the order of the resulting lines
    xdgMimeOutput=$(XDG_UTILS_DEBUG_LEVEL=2 xdg-mime query default $mimeType 2>&1 | tac)
    # If a default app was found, its .desktop file will be found 
    # on the first line of the (reversed) xdg-mime output
    desktopFile=$(echo "$xdgMimeOutput" | sed -n '1p')

    # If a default app was found
    if [[ $desktopFile == *.desktop ]]; then
        # Only try to use .desktop files that are in the local directory
        if [[ -r $HOME/.local/share/applications/$desktopFile ]]; then
            # Check if the default app is a terminal app
            isTerminalApp=$(grep "Terminal=" $HOME/.local/share/applications/$desktopFile)
            isTerminalApp=${isTerminalApp#Terminal=}
            if [[ $isTerminalApp == true ]]; then
                kitty --detach xdg-open "$chosenFile"
            else
                nohup xdg-open "$HOME/$chosenFile" > /dev/null 2>&1 & disown
                sleep 0.01
            fi
        fi
    fi
fi
